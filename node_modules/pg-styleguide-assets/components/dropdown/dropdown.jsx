PG.Components.Dropdown = React.createClass({
  propTypes:  {
    items:          React.PropTypes.array,
    size:           React.PropTypes.string,
    role:           React.PropTypes.string,
    text:           React.PropTypes.string,
    disabled:       React.PropTypes.bool,
    selectHandler:  React.PropTypes.func,
    updateText:     React.PropTypes.bool
  },

  getDefaultProps: function getDefaultProps() {
    return {
      items: [],
      size: "medium",
      role: "primary",
      text: "Menu Item"
    };
  },

  getInitialState: function getInitialState() {
    return {
      open: false,
      text: this.props.text
    };
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (nextProps.text)
      this.setState({ text: nextProps.text });
  },

  handleButtonClick: function handleButtonClik() {
    this.setState({
      open: !this.state.open
    });
  },

  handleOptionSelection: function handleOptionSelection(el) {
    var nextState = { open: false },
      selectedOption = {
        value: el.target.value,
        text: el.target.getAttribute("data-text")
      };

    if (this.props.updateText)
      nextState.text = selectedOption.text;

    this.setState(nextState);

    if(this.props.selectHandler)
      this.props.selectHandler(selectedOption);
  },

  render: function render() {
    return (
      <div className="dropdown">
        <PG.Components.Button
          size={this.props.size}
          role={this.props.role}
          text={this.state.text}
          showChevron={true}
          disabled={this.props.disabled}
          clickHandler={this.handleButtonClick}
        />
        <PG.Components.DropdownMenu
          items={this.props.items}
          open={this.state.open}
          selectHandler={this.handleOptionSelection}
        />
      </div>
    );
  }
});

if(typeof module !== "undefined") module.exports = PG.Components.Dropdown;
